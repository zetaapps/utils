apply plugin: 'com.android.library'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion versions.targetSdk
        versionCode 4
        versionName "0.4"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }

    buildTypes {

        debug {
            minifyEnabled true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        warningsAsErrors false
        abortOnError true

        //App does not have deep linking.
        disable 'GoogleAppIndexingWarning'
        //Okio references java.nio that does not presented in Android SDK.
        disable 'InvalidPackage'

        xmlReport false
        htmlReport true
        lintConfig file("${project.rootDir}/config/lint/lint.xml")
        htmlOutput file("$project.buildDir/reports/lint/lint-result.html")
        xmlOutput file("$project.buildDir/reports/lint/lint-result.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // This allows us see tests execution progress in the output on the CI.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
        //Print the test result summary
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "Zeta Utils Test Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //SUPPORT LIBS
    implementation libraries.supportAppCompat

    //ANNOTATION
    implementation libraries.jsr305
    implementation libraries.javaxAnnotationApi

    //TESTING
    testImplementation libraries.junit
}

configurations.all {
    resolutionStrategy {
        // Force our version of support-annotations, we have a conflict between app and androidTest dependency resolution.
        force libraries.supportAnnotations
    }
}

